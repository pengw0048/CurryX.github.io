import caurina.transitions.Tweener;import oxylus.TGallery.*;import oxylus.flv.FLVPlayback;import flash.display.BitmapData;class oxylus.TGallery.Viewer extends MovieClip {	private var Background:MovieClip;	private var NextFileBtn:MovieClip;	private var PrevFileBtn:MovieClip;	private var VideoMc:MovieClip;	private var CloseBtn:MovieClip;	private var VideoOb:Video;	private var Preloader:MovieClip;	private var Image:MovieClip;	private var TBox:MovieClip;	private var VidCBar:MovieClip;	private var node:XMLNode;	private var space:Number;	private var w:Number;	private var h:Number;	private var originalW:Number;	private var originalH:Number;	private var borderWidth:Number;	private var index:Number;	private var mcLoader:MovieClipLoader;	private var videoCtrl:Object;	private var descrHeight:Number;	private var type:String;	private var cobj:Object;	private var trans:String;	private var transTime:Number;	public static var onExit:Function;	//	private var fx:Number;	private var fy:Number;	private var fw:Number;	private var fh:Number;	private var vch:Number;	//	public function Viewer() {		Background = eval(this._target+"/_a_");		Background.onPress = closeViewer;		NextFileBtn = eval(this._target+"/_b_");		PrevFileBtn = eval(this._target+"/_c_");		VideoMc = eval(this._target+"/_d_");		CloseBtn = eval(this._target+"/_e_");		VideoOb = eval(this._target+"/_d_/_a_");		Preloader = this.attachMovie("IDPreloader", "_pldr_xyzt", this.getNextHighestDepth());		TBox = this.attachMovie("IDTextBox", "_tbox_xyzt", this.getNextHighestDepth());		VidCBar = this.attachMovie("IDVideoControlBar", "_vcbar_xyzt", this.getNextHighestDepth());		VidCBar._visible = false;		//		CloseBtn._alpha = 0;		//		NextFileBtn.onPress = Next_onPress;		PrevFileBtn.onPress = Prev_onPress;		//		Background.onPress = closeViewer;		Background.onRollOver = CloseBtn_show;		Background.onRollOut = Background.onReleaseOutside=CloseBtn_hide;		//		w = 700;		h = 650;		space = 20;		vch = 0;		borderWidth = 3;		initBoxSize();		index = 0;		Image = undefined;		cobj = undefined;		mcLoader = new MovieClipLoader();		videoCtrl = new FLVPlayback(this, VideoOb, this);		VidCBar.control = videoCtrl;		videoCtrl.onFLVInfo = onFlvInfo;		videoCtrl.onFLVBuffering = onFlvBuffering;		videoCtrl.autoRewind = false;		descrHeight = 200;		TBox.height = descrHeight;		type = "";		resize();		this._visible = false;		this._alpha = 0;	}	private function initBoxSize() {		var t:Number = NextFileBtn._height;		originalW = originalH=t-2*borderWidth;		vch = 0;	}	private function clearAll() {		Tweener.removeTweens(cobj);		Image.removeMovieClip();		Image = undefined;		Preloader.pStop();		videoCtrl.close();		VideoOb.clear();		VideoMc._visible = false;		VideoMc._xscale = VideoMc._yscale=100;		cobj = undefined;	}	private function setData(n:XMLNode) {		VidCBar._visible = false;		trans = "easeInOutQuad";		transTime = .6;		clearAll();		node = n;		TBox.data = node;		var file:String = node.attributes.file;		type = Utils.getExt(file);		function gf() {			TBox.FV(true);		}		if (!this._visible) {			trans = "easeInOutExpo";			transTime = .8;			initBoxSize();			resize();			this._visible = true;			TBox.FV(false);			Tweener.addTween(this, {_alpha:100, time:.5, transition:"linear", onComplete:gf});		}		var ory:Number = Background._y+Background._height+space;		function gf2() {			with (this._parent) {				loadTheFile();			}		}		if (TBox._y != ory) {			Tweener.addTween(TBox, {onComplete:gf2, _y:ory, transition:"easeInQuad", time:.2});		} else {			loadTheFile();		}	}	private function loadTheFile() {		if (type == "flv") {			loadVideo();			vch = VidCBar.height;		} else {			loadImage();			vch = 0;		}	}	private function loadVideo() {		videoCtrl.load(node.attributes.file);	}	private function onFlvInfo(vw:Number, vh:Number) {		videoCtrl.stop();		originalW = VideoOb._width=vw;		originalH = VideoOb._height=vh;		cobj = VideoMc;		runAnimation();	}	private function onFlvBuffering(b:Boolean) {		if (b) {			Preloader.pStart();		} else {			Preloader.pStop();		}	}	private function loadImage() {		mcLoader.addListener(this);		resetImg();		mcLoader.loadClip(node.attributes.file, Image);		Preloader.pStart();	}	private function resetImg() {		if (Image != undefined) {			Tweener.removeTweens(Image);			Image.removeMovieClip();		}		Image = this.createEmptyMovieClip("_img_"+(index++), this.getNextHighestDepth());		Image._visible = false;	}	private function onLoadComplete() {		Preloader.pStop();	}	private function onLoadInit() {		mcLoader.removeListener(this);		originalW = Image._width;		originalH = Image._height;		var bd:BitmapData = new BitmapData(originalW, originalH);		bd.draw(Image);		resetImg();		Image.attachBitmap(bd, Image.getNextHighestDepth(), "never", true);		cobj = Image;		CloseBtn.swapDepths(this.getNextHighestDepth());		runAnimation();	}	private function getVals() {		this._x = this._y=0;		var r:Number = originalW/originalH;		var mw:Number = w-2*borderWidth-4*space-2*NextFileBtn._width;		var mh:Number = h-2*borderWidth-3*space-descrHeight-vch;		fw = originalW;		fh = originalH;		fx = fy=0;		if (originalW>mw || originalH>mh) {			fw = mw;			fh = fw/r;			if (fh>mh) {				fh = mh;				fw = fh*r;			}		}		fw = Math.round(fw);		fh = Math.round(fh);		fx = Math.round((w-fw)/2);		fy = Math.round((h-fh-descrHeight-space-vch)/2);	}	private function runAnimation() {		getVals();		//		cobj._x = fx;		cobj._y = fy;		cobj._width = fw;		cobj._height = fh;		//		function gf() {			with (this._parent) {				NextFileBtn._x = Background._x+Background._width+space;				PrevFileBtn._x = Background._x-space;				TBox.width = Background._width;				TBox._x = Background._x;				TBox._y = Background._y+Background._height+space;				VidCBar.width = Background._width;				VidCBar._x = Background._x;				VidCBar._y = Background._y+Background._height+Math.round(space/2);				NextFileBtn._y = PrevFileBtn._y=Background._y+Math.round(Background._height/2);				Preloader._x = Background._x+Math.round(Background._width/2);				Preloader._y = Background._y+Math.round(Background._height/2);			}		}		function gf2() {			with (this._parent) {				cobj._alpha = 0;				cobj._visible = true;			}		}		function gf3() {			with (this._parent) {				if (type == "flv") {					videoCtrl.play();					VidCBar._visible = true;					VidCBar.height = 0;					VidCBar._alpha = 0;					Tweener.addTween(TBox, {_y:TBox._y+vch, time:.3, transition:"easeOutQuad"});					Tweener.addTween(VidCBar, {_alpha:100,height:30, time:.3, transition:"easeOutQuad"});				}			}		}		//		var vx:Number, vy:Number, vh:Number, vw:Number;		vx = fx-borderWidth;		vy = fy-borderWidth;		vw = fw+2*borderWidth;		vh = fh+2*borderWidth;		//		//		Tweener.addTween(Background, {_x:vx, _y:vy, _width:vw, _height:vh, time:transTime, transition:trans, onUpdate:gf, onComplete:gf2});		Tweener.addTween(cobj, {_alpha:100, time:.4, transition:"easeOutQuad", delay:transTime, onComplete:gf3});	}	private function resize() {		getVals();		if (cobj != undefined) {			cobj._x = fx;			cobj._y = fy;			cobj._width = fw;			cobj._height = fh;		}		Background._x = fx-borderWidth;		Background._y = fy-borderWidth;		Background._width = fw+2*borderWidth;		Background._height = fh+2*borderWidth;		Preloader._x = Background._x+Math.round(Background._width/2);		Preloader._y = Background._y+Math.round(Background._height/2);		NextFileBtn._x = Background._x+Background._width+space;		PrevFileBtn._x = Background._x-space;		NextFileBtn._y = PrevFileBtn._y=Background._y+Math.round(Background._height/2);		CloseBtn._x = Preloader._x;		CloseBtn._y = Preloader._y;		TBox.width = Background._width;		TBox._x = Background._x;		TBox._y = Background._y+Background._height+space+vch;		VidCBar.width = Background._width;		VidCBar._x = Background._x;		VidCBar._y = Background._y+Background._height+Math.round(space/2);	}	public function set data(n:XMLNode) {		setData(n);	}	public function get data():XMLNode {		return node;	}	private function Next_onPress() {		with (this._parent) {			var n:XMLNode = node.nextSibling;			if (n == null) {				n = node.parentNode.firstChild;			}			setData(n);		}	}	private function Prev_onPress() {		with (this._parent) {			var n:XMLNode = node.previousSibling;			if (n == null) {				n = node.parentNode.lastChild;			}			setData(n);		}	}	public function set width(nw:Number) {		w = Math.round(nw);		resize();	}	public function set height(nh:Number) {		h = Math.round(nh);		resize();	}	public function get width():Number {		return w;	}	public function get height():Number {		return h;	}	private function closeViewer() {		var ref = this._parent;		function gf() {			onExit.call(_root);			_visible = false;			clearAll();			TBox.reset();		}		ref.TBox.FV(false);		Tweener.addTween(ref, {_alpha:0, time:.2, transition:"linear", onComplete:gf});	}	private function CloseBtn_show() {		with (this._parent) {			Tweener.removeTweens(CloseBtn);			Tweener.addTween(CloseBtn, {_alpha:75, time:.3, delay:.3, transition:"easeOutQuad"});		}	}	private function CloseBtn_hide() {		with (this._parent) {			Tweener.removeTweens(CloseBtn);			Tweener.addTween(CloseBtn, {_alpha:0, time:.3, transition:"easeOutQuad"});		}	}}